/*state = {
    
    counters: [
      {
        id: 1, value: 0
      },
      {
        id: 2, value: 0
      },
      {
        id: 3, value: 0
      }
    ]
  }

  constructor(props){
    super(props);

    console.log('App Constructor with props', props);
  }

  componentDidMount(){
    console.log("App Did Mounted");

  }

  
  handleDelete = (counter) => {
    const counters = this.state.counters.filter(c => c.id !== counter.id)

    this.setState({counters})
  }

  handleReset = () => {
    
    const coutnersCopy = [...this.state.counters];
    coutnersCopy.forEach(c => c.value = 0)

    this.setState({
      counters: coutnersCopy
    });

  }

  handleIncrement = (counter) => {

    const counters = [...this.state.counters];

    const index = counters.indexOf(counter);

    counters[index] = { ...counter }

    counters[index].value++;


    this.setState({ counters })

  }

  handleDecrement = (counter) => {

    const counters = [...this.state.counters];

    const index = counters.indexOf(counter);

    counters[index] = { ...counter }

    counters[index].value --;


    this.setState({ counters })

  }

  */